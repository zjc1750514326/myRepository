package controller;

import java.io.File;
import java.io.IOException;
import java.util.UUID;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import empty.Food;
import empty.FoodCustom;
import empty.Page;
import service.FoodService;

/**
 * 菜单列表控制器
 * @author zjc
 *
 */
@Controller
@RequestMapping("sys/food")
public class FoodController {
	
	@Autowired
	private FoodService foodService;
	
	@RequestMapping("/insert")
	@ResponseBody     //如果返回json格式需要这个注解
	public Object insert(FoodCustom food,
			MultipartFile foodPic //接收商品图片
			) {
		
		//图片原始名称
		String originalFilename = foodPic.getOriginalFilename();
		
		if(foodPic!=null && originalFilename!=null && originalFilename.length()>0) {
			//物理存储路径
			String pic_path = "D:\\develop\\upload\\temp\\";
			
			//新图片名称
			String newFileName = UUID.randomUUID()+originalFilename.substring(originalFilename.lastIndexOf("."));
			
			//新图片
			File newFile = new File(pic_path+newFileName);
			
			try {
				//将内存中的数据写入磁盘
				foodPic.transferTo(newFile);
			} catch (IOException e) {
				e.printStackTrace();
			}

			//将新图片写入到food
			food.setFoodimage(newFileName);
		}
		
		int i=0;
		
		try {
			i = foodService.insert(food);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return i;
	}
	
	
	
	//根据主键批量删除菜单
	@RequestMapping("/deleteList")
	@ResponseBody     //如果返回json格式需要这个注解
	public Object deleteList(String[] pks) {
		
		System.out.println("pks="+pks);
		int i=0;
		
		try {
			i = foodService.deleteList(pks);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return i;
	}
	
	//根据主键批量删除菜单
	@RequestMapping("/update")
	@ResponseBody     //如果返回json格式需要这个注解
	public Object update(FoodCustom food) {
		
		int i=0;
		try {
			i = foodService.update(food);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return i;
	}
	
	
	//通过多条件查询分页
	@RequestMapping("/selectPageUseDyc")
	@ResponseBody     //如果返回json格式需要这个注解
	public Object selectPageUseDyc(Page<Food> page,FoodCustom food) throws Exception{
		
		//因为js中，不支持类名.属性，所以在参数中添加FoodCustom
		page.setParamEntity(food);
		
		//设置到service层中
		Page<Food> p = foodService.selectPageUseDyc(page);
		return p.getPageMap();
	}
	
}
