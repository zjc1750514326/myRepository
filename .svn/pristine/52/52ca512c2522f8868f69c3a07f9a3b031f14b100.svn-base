package controller;

import java.io.File;
import java.io.IOException;
import java.util.Map;
import java.util.UUID;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import empty.Food;
import empty.FoodCustom;
import empty.Page;
import org.springframework.web.servlet.ModelAndView;
import service.FoodService;
import javax.servlet.http.HttpServletRequest;

/**
 * 菜单列表控制器
 * @author zjc
 *
 */
@Controller
@RequestMapping("sys/food")
public class FoodController {
	// 获取日志记录器logger,名字为本类类名
	private static Logger log = Logger.getLogger(FoodController.class);
	
	@Autowired
	private FoodService foodService;
	
	@RequestMapping("/insert")
	@ResponseBody     //如果返回json格式需要这个注解
	public Object insert(FoodCustom food,
						 MultipartFile foodPic//接收商品图片
			) {

//		image(foodPic,food);
		
		int i=0;
		
		try {
			i = foodService.insert(food);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return i;
	}
	
	//根据主键批量删除菜单
	@RequestMapping("/deleteList")
	@ResponseBody     //如果返回json格式需要这个注解
	public Object deleteList(String[] pks) {
		
		System.out.println("pks="+pks);
		int i=0;
		
		try {
			i = foodService.deleteList(pks);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return i;
	}
	
	//根据主键批量删除菜单
	@RequestMapping("/update")
	@ResponseBody     //如果返回json格式需要这个注解
	public Object update(FoodCustom food,MultipartFile foodPic,HttpServletRequest request) {

		image(foodPic,food,request);
		int i=0;
		try {
			i = foodService.update(food);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return i;
	}
	
	
	//通过多条件查询分页
	@RequestMapping("/selectPageUseDyc")
	@ResponseBody     //如果返回json格式需要这个注解
	public Object selectPageUseDyc(Page<Food> page,FoodCustom food) throws Exception{

		//因为js中，不支持类名.属性，所以在参数中添加FoodCustom
		page.setParamEntity(food);
		
		//设置到service层中
		Page<Food> p = foodService.selectPageUseDyc(page);
		System.out.println("后台："+p.toString());
		return p.getPageMap();
	}

	@RequestMapping("/caidan")
	@ResponseBody
	public ModelAndView caidan(FoodCustom food,Page<Food> page){
		food.setStylename("%%");
		food.setFoodname("%%");
		page.setPage(1);
		page.setRows(6);
		page.setParamEntity(food);
		Page<Food> p = foodService.selectPageUseDyc(page);
		System.out.println("p.getList():  --->"+p.getList()+"------"+p.getPageMap()+"start"+page.toString());

		ModelAndView view = new ModelAndView();
		view.addObject("foodList",p.getList());
		view.setViewName("app/detail/caidan");
		return view;
	}

	/**
	 * 接受图片
	 * @param foodPic
	 * @param food
	 * @param request
	 */
	public void image(MultipartFile foodPic, Food food, HttpServletRequest request){
		//图片原始名称
		String originalFilename = foodPic.getOriginalFilename();

		if(foodPic!=null && originalFilename!=null && originalFilename.length()>0) {
			//物理存储路径
			String pic_path = "D:\\develop\\upload\\temp\\";

			String path = request.getContextPath();
			log.info("path:---->"+path);
			String realPath = request.getSession().getServletContext().getRealPath("/upload");
			log.info("realPath:---->"+realPath);


			//新图片名称
			String newFileName = UUID.randomUUID()+originalFilename.substring(originalFilename.lastIndexOf("."));

			//新图片
			File newFile = new File(pic_path+newFileName);

			try {
				//将内存中的数据写入磁盘
				foodPic.transferTo(newFile);
			} catch (IOException e) {
				e.printStackTrace();
			}
			log.info("图片路径："+newFileName);
			//将新图片写入到food
			food.setFoodimage(newFileName);
		}
	}
}